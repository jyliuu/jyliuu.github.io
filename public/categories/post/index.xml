<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Post on Jinyang Liu (刘锦阳)</title>
    <link>//localhost:1313/categories/post/</link>
    <description>Recent content in Post on Jinyang Liu (刘锦阳)</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 06 Oct 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="//localhost:1313/categories/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Debugging Rcpp with VSCode</title>
      <link>//localhost:1313/debugging-rcpp-vscode/</link>
      <pubDate>Fri, 06 Oct 2023 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/debugging-rcpp-vscode/</guid>
      <description>&lt;h2 id=&#34;preface&#34;&gt;Preface&lt;/h2&gt;&#xA;&lt;p&gt;The following post details the process of connecting the VSCode debugger with Rcpp, it is a compilation from the following sources:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.davisvaughan.com/posts/2022-03-11-using-vs-code-to-debug-r-packages-with-c-code/&#34; target=&#34;_blank&#34; &gt;Using VS Code to Debug R Packages with C or C++ Code&lt;/a&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/renkun-ken/vscode-rcpp-demo/tree/master&#34; target=&#34;_blank&#34; &gt;vscode-rcpp-demo (GitHub repo)&lt;/a&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://r-pkgs.org/dependencies-in-practice.html#sec-dependencies-in-imports&#34; target=&#34;_blank&#34; &gt;R packages documentation&lt;/a&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;I am running on a MacBook Pro with the M2 Pro chip, my R version is 4.3.1 and is installed via Homebrew.&lt;/p&gt;&#xA;&lt;h2 id=&#34;step-0-installing-necessary-r-packages&#34;&gt;Step 0: Installing necessary R packages&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/ManuelHentschel/vscDebugger&#34; target=&#34;_blank&#34; &gt;vscDebugger&lt;/a&gt;&#xA;: An R language connector that connects to the VSCode debugger, for R code only&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://devtools.r-lib.org/&#34; target=&#34;_blank&#34; &gt;devtools&lt;/a&gt;&#xA;: Necessary for building the R package&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/r-lib/usethis&#34; target=&#34;_blank&#34; &gt;usethis&lt;/a&gt;&#xA;: For setting up the package skeleton&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/r-lib/testthat&#34; target=&#34;_blank&#34; &gt;testhat&lt;/a&gt;&#xA;: For creating unit-tests&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;step-1-getting-vscode-to-work-with-c&#34;&gt;Step 1: Getting VSCode to work with C++&lt;/h2&gt;&#xA;&lt;p&gt;Install VSCode if you haven&amp;rsquo;t already, and add the following extensions as detailed by Davis Vaughan in the first post above&lt;/p&gt;</description>
    </item>
    <item>
      <title>BSc Thesis: Super Learners</title>
      <link>//localhost:1313/super-learners-bsc/</link>
      <pubDate>Tue, 01 Aug 2023 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/super-learners-bsc/</guid>
      <description>&lt;p&gt;On the 23rd of June 2023 I defended my BSc thesis: &amp;ldquo;Super Learners&amp;rdquo;. The &lt;a href=&#34;https://github.com/jyliuu/bachelor-thesis/blob/main/bachelordraft/out/main.pdf&#34; target=&#34;_blank&#34; &gt;thesis paper&lt;/a&gt;&#xA; and code for simulations can be found on &lt;a href=&#34;https://github.com/jyliuu/bachelor-thesis&#34; target=&#34;_blank&#34; &gt;GitHub&lt;/a&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;The project was supervised by Prof. Thomas Gerds at the Biostatistics department of UCPH and Prof. Niels Richard Hansen at the MATH department.&lt;/p&gt;&#xA;&lt;h3 id=&#34;abstract&#34;&gt;Abstract&lt;/h3&gt;&#xA;&lt;p&gt;In this thesis we examine super learners and their applicability to binary regression. The super learner is a method for combining predictions from a specified libraryof learning algorithms to create a strong learner. We introduce and prove the oracle property for the discrete super learner, which is extended to the ensemble super&#xA;learner. The oracle results show that given a library of learning algorithms, asymptotically, the super learner will not perform worse than the best algorithm in the library in terms of risk. We then compare the performance of the super learner with other regression algorithms including logistic regression and XGBoost on simulated data. The simulations demonstrate that the super learner achieves minimal risk as the number of observations grows. Finally, a new technique of combining learner predictions to be used by the ensemble super learner is proposed and has shown interesting results.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
